--- /psquare/developer/ANDROID/CYANOGENMOD7/frameworks/base/media/libmedia/AudioTrack.cpp
+++ /psquare/developer/ANDROID/CYANOGENMOD/frameworks/base/media/libmedia/AudioTrack.cpp
@@ -325,6 +325,23 @@
 
 uint32_t AudioTrack::latency() const
 {
+    if (AudioSystem::isOutputChannel(mChannels)) {
+        uint32_t latency = 1000;
+
+        if (AudioSystem::getOutputLatency(&latency, mStreamType) == NO_ERROR) {
+            LOGV("latency = %d", latency);
+            if (mCblk) {
+                int frames = mCblk->framesReady();
+
+                LOGV("mCblk->framesReady = %d", frames);
+                latency += frames * 1000 / mCblk->sampleRate;
+            }
+
+            return latency;
+        }
+            LOGV("latency getOutputLatency error");
+    }
+
     return mLatency;
 }
 
@@ -1092,6 +1109,8 @@
         mCbf(EVENT_MORE_DATA, mUserData, &audioBuffer);
         writtenSize = audioBuffer.size;
 
+        LOGV("writtenSize1 %d", writtenSize);
+
         // Sanity check on returned size
         if (ssize_t(writtenSize) <= 0) {
             // The callback is done filling buffers
@@ -1102,6 +1121,8 @@
             break;
         }
         if (writtenSize > reqSize) writtenSize = reqSize;
+
+        LOGV("writtenSize2 %d", writtenSize);
 
         if (mFormat == AudioSystem::PCM_8_BIT && !(mFlags & AudioSystem::OUTPUT_FLAG_DIRECT)) {
             // 8 to 16 bit conversion
@@ -1190,6 +1211,9 @@
     uint32_t u = this->user;
 
     u += frameCount;
+
+    LOGV("stepUser +%d = %d\n", frameCount, u);
+
     // Ensure that user is never ahead of server for AudioRecord
     if (flags & CBLK_DIRECTION_MSK) {
         // If stepServer() has been called once, switch to normal obtainBuffer() timeout period
