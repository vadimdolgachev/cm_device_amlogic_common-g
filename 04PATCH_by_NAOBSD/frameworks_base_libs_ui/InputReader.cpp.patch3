--- frameworks/base/libs/ui/InputReader.cpp.original
+++ frameworks/base/libs/ui/InputReader.cpp
@@ -26,6 +26,7 @@
 #define DEBUG_MOUSE_EVENTS 0
 
 #include <cutils/log.h>
+#include <cutils/properties.h>
 #include <ui/InputReader.h>
 
 #include <stddef.h>
@@ -39,6 +40,11 @@
 #define INDENT2 "    "
 #define INDENT3 "      "
 #define INDENT4 "        "
+
+namespace {
+    int32_t offset_x;
+    int32_t offset_y;
+}
 
 namespace android {
 
@@ -1737,6 +1746,42 @@
     const InputDeviceCalibration& in = getDevice()->getCalibration();
     Calibration& out = mCalibration;
 
+    // XXX hack for Haipad M701/M1001
+    char propBuf[PROPERTY_VALUE_MAX];
+    property_get("touch.offset_x", propBuf, "0");
+    offset_x = atoi(propBuf);
+    property_get("touch.offset_y", propBuf, "0");
+    offset_y = atoi(propBuf);
+
+    // Pointercal
+    if (! in.tryGetProperty(String8("touch.pointercal.x1"), out.pointercalX1)) {
+        out.pointercalX1 = 1.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.x2"), out.pointercalX2)) {
+        out.pointercalX2 = 0.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.x3"), out.pointercalX3)) {
+        out.pointercalX3 = 0.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.y1"), out.pointercalY1)) {
+        out.pointercalY1 = 0.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.y2"), out.pointercalY2)) {
+        out.pointercalY2 = 1.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.y3"), out.pointercalY3)) {
+        out.pointercalY3 = 0.0f;
+    }
+    if (! in.tryGetProperty(String8("touch.pointercal.scale"), out.pointercalScale)) {
+        out.pointercalScale = 1.0f;
+    }
+    out.pointercalX1 /= out.pointercalScale;
+    out.pointercalX2 /= out.pointercalScale;
+    out.pointercalX3 /= out.pointercalScale;
+    out.pointercalY1 /= out.pointercalScale;
+    out.pointercalY2 /= out.pointercalScale;
+    out.pointercalY3 /= out.pointercalScale;
+
     // Touch Size
     out.touchSizeCalibration = Calibration::TOUCH_SIZE_CALIBRATION_DEFAULT;
     String8 touchSizeCalibrationString;
@@ -2222,7 +2267,8 @@
                             goto DispatchVirtualKey;
                         }
                     }
-                    return DROP_STROKE;
+                    // XXX hack for Haipad M701/M1001
+                    //return DROP_STROKE;
                 }
             }
             return DISPATCH_TOUCH;
@@ -2376,9 +2422,35 @@
 
             const PointerData& in = touch->pointers[inIndex];
 
+            // XXX hack for Haipad M701/M1001
+            int32_t inx = in.x, iny = in.y;
+            if (offset_x) {
+                if (inx >= 32768)
+                    inx -= 65536;
+                inx -= offset_x;
+            }
+            if (offset_y) {
+                if (iny >= 32768)
+                    iny -= 65536;
+                iny -= offset_y;
+            }
+
             // X and Y
-            float x = float(in.x - mLocked.xOrigin) * mLocked.xScale;
-            float y = float(in.y - mLocked.yOrigin) * mLocked.yScale;
+            float x, y;
+            if (mCalibration.pointercalScale == 1.0f) {
+                x = float(inx - mLocked.xOrigin) * mLocked.xScale;
+                y = float(iny - mLocked.yOrigin) * mLocked.yScale;
+            } else {
+                // Pointercal
+                float rawx = float(inx - mLocked.xOrigin);
+                float rawy = float(iny - mLocked.yOrigin);
+                x = mCalibration.pointercalX1 * rawx +
+                    mCalibration.pointercalX2 * rawy +
+                    mCalibration.pointercalX3;
+                y = mCalibration.pointercalY1 * rawx +
+                    mCalibration.pointercalY2 * rawy +
+                    mCalibration.pointercalY3;
+            }
 
             // ToolMajor and ToolMinor
             float toolMajor, toolMinor;
