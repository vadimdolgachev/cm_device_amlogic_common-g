--- BrowserActivity.java.original	2012-02-23 18:58:07.000000000 +0100
+++ BrowserActivity.java.psquare	2012-02-29 13:13:22.000000000 +0100
@@ -138,6 +138,11 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+
+import java.io.FileFilter;
+import android.os.Environment;
+import java.util.ArrayList;
+
 public class BrowserActivity extends Activity
     implements View.OnCreateContextMenuListener, DownloadListener {
 
@@ -147,6 +152,8 @@
     private final static boolean DEBUG = com.android.browser.Browser.DEBUG;
     private final static boolean LOGV_ENABLED = com.android.browser.Browser.LOGV_ENABLED;
     private final static boolean LOGD_ENABLED = com.android.browser.Browser.LOGD_ENABLED;
+    private static final String ACTION_HDMISWITCH_MODE_CHANGED =
+		"com.amlogic.HdmiSwitch.HDMISWITCH_MODE_CHANGED";
 
     final static int MAX_HISTORY_URLS_TO_BE_FETCHED = 10;
     final static String DATABASE_HISTORY_PREFETCH_CLAUSE = "visits DESC";
@@ -351,6 +358,44 @@
         };
         registerReceiver(mPackageInstallationReceiver, filter);
 
+
+        mVoutModeChangedFilter = new IntentFilter(ACTION_HDMISWITCH_MODE_CHANGED);
+        mVoutModeChangedReceiver = new BroadcastReceiver()
+		{
+			@Override
+			public void onReceive(Context context, Intent intent) {
+				if (ACTION_HDMISWITCH_MODE_CHANGED.equals(intent.getAction())) {			 
+                    if (mCustomView != null) {
+                        // if a custom view is showing, hide it
+                        mTabControl.getCurrentWebView().getWebChromeClient()
+                                .onHideCustomView();
+                    }
+				}
+			}
+		};        
+
+	    mHDMIPlugFilter = new IntentFilter(Intent.ACTION_TVOUT_EVENT);
+		mHDMIPlugFilter.addAction("com.amlogic.HdmiSwitch.HDMI_PLUGIN");
+        mHDMIPlugReceiver = new BroadcastReceiver()
+		{
+			@Override
+			public void onReceive(Context context, Intent intent) {
+				  WebView wb = mTabControl.getCurrentWebView();
+				  String action = intent.getAction();
+				//  Log.i("Browser",""+intent.getExtra(Intent.EXTRA_TVOUT_STATE));
+			//	if("com.amlogic.HdmiSwitch.HDMI_PLUGIN".equals(action)){
+			//		wb.setDoubleTapForZoom(false);
+			//	//	Log.i("Browser",""+false);
+			//	}else {
+			//			if(0==intent.getExtra(Intent.EXTRA_TVOUT_STATE) ){
+			//				wb.setDoubleTapForZoom(true);
+				//			Log.i("Browser",""+true);
+            //        }
+			//	}
+			}
+		}; 
+		
+
         if (!mTabControl.restoreState(icicle)) {
             // clear up the thumbnail directory if we can't restore the state as
             // none of the files in the directory are referenced any more.
@@ -826,6 +871,11 @@
 
         registerReceiver(mNetworkStateIntentReceiver,
                          mNetworkStateChangedFilter);
+                         
+        registerReceiver(mVoutModeChangedReceiver,
+                         mVoutModeChangedFilter);      
+		registerReceiver(mHDMIPlugReceiver, 
+							mHDMIPlugFilter);	
         WebView.enablePlatformNotifications();
         toggleNotificationBar(!mSettings.isFullScreen());
     }
@@ -1025,6 +1075,8 @@
 
         // unregister network state listener
         unregisterReceiver(mNetworkStateIntentReceiver);
+        unregisterReceiver(mVoutModeChangedReceiver);
+        unregisterReceiver(mHDMIPlugReceiver);
         WebView.disablePlatformNotifications();
 
         if (mCustomView != null) {
@@ -2262,6 +2314,14 @@
                     return true;
                 }
                 break;
+            case KeyEvent.KEYCODE_ENTER:
+                WebView webview = mTabControl.getCurrentWebView();
+                if (webview.hasFocus()) {
+                    return webview.onKeyDown(KeyEvent.KEYCODE_DPAD_CENTER,
+                            new KeyEvent(KeyEvent.ACTION_DOWN,
+                                    KeyEvent.KEYCODE_DPAD_CENTER));
+                }
+                break;
         }
         return super.onKeyDown(keyCode, event);
     }
@@ -2296,6 +2356,18 @@
                     return true;
                 }
                 break;
+            case KeyEvent.KEYCODE_ENTER:
+                WebView webview = mTabControl.getCurrentWebView();
+                if (webview.hasFocus()) {
+                    return webview.onKeyUp(KeyEvent.KEYCODE_DPAD_CENTER,
+                            new KeyEvent(KeyEvent.ACTION_UP,
+                                    KeyEvent.KEYCODE_DPAD_CENTER));
+                }
+                break;
+
+//			case KeyEvent.KEYCODE_MEDIA_INFO:
+//				editUrl();
+//				break;
         }
         return super.onKeyUp(keyCode, event);
     }
@@ -4084,6 +4156,14 @@
 
     private BroadcastReceiver mPackageInstallationReceiver;
 
+    private IntentFilter mVoutModeChangedFilter;
+    private BroadcastReceiver mVoutModeChangedReceiver;
+
+	private IntentFilter mHDMIPlugFilter;
+    private BroadcastReceiver mHDMIPlugReceiver;
+
+	
+	
     private SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins;
 
     // activity requestCode
